//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.RemoteServer {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteServer.ICurrencyToWordService")]
    internal interface ICurrencyToWordService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyToWordService/CurrencyToWord", ReplyAction="http://tempuri.org/ICurrencyToWordService/CurrencyToWordResponse")]
        string CurrencyToWord(decimal currency);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyToWordService/CurrencyToWord", ReplyAction="http://tempuri.org/ICurrencyToWordService/CurrencyToWordResponse")]
        System.Threading.Tasks.Task<string> CurrencyToWordAsync(decimal currency);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal interface ICurrencyToWordServiceChannel : Client.RemoteServer.ICurrencyToWordService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    internal partial class CurrencyToWordServiceClient : System.ServiceModel.ClientBase<Client.RemoteServer.ICurrencyToWordService>, Client.RemoteServer.ICurrencyToWordService {
        
        public CurrencyToWordServiceClient() {
        }
        
        public CurrencyToWordServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CurrencyToWordServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyToWordServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CurrencyToWordServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CurrencyToWord(decimal currency) {
            return base.Channel.CurrencyToWord(currency);
        }
        
        public System.Threading.Tasks.Task<string> CurrencyToWordAsync(decimal currency) {
            return base.Channel.CurrencyToWordAsync(currency);
        }
    }
}
